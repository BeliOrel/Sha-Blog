$ mkdir Sha_Blog
$ cd Sha_Blog/
$ export FLASK_APP=shablog.py
$ flask run   <- run server

With this there's no need to restart server every time we make a change in our code:
$ export FLASK_DEBUG=1

Manually generate secret API key:
$ python
>>> import secrets
>>> secrets.token_hex(16)
'4cb195a017b7d117311173f6d1635375'
>>> exit()

Install database
$ pip install flask-sqlalchemy

Insert data to DB
$ python
>>> from shablog import db
>>> db.create_all() -> this creates db file in the project
>>> from shablog import User, Post
>>> user_1 = User(username='Corey', email='co@email.com', password='password')
>>> db.session.add(user_1)
>>> user_2 = User(username='Mei', email='mei@email.com', password='password')
>>> db.session.add(user_2)
>>> db.session.commit()
>>> User.query.all() -> list of all users
[User('Corey', 'co@email.com', 'default.jpg'), User('Mei', 'mei
')]                                                            
>>> User.query.first()                                         
User('Corey', 'co@email.com', 'default.jpg')                   
>>> User.query.filter_by(username='Corey').all()               
[User('Corey', 'co@email.com', 'default.jpg')]                 
>>> User.query.filter_by(username='Corey').first()             
User('Corey', 'co@email.com', 'default.jpg')                   
>>> user = User.query.filter_by(username='Corey').first()      
>>> user                                                       
User('Corey', 'co@email.com', 'default.jpg')                   
>>> user.id                                                    
1                                                              
>>> user = User.query.get(1)                                   
>>> user                                                       
User('Corey', 'co@email.com', 'default.jpg') 
>>> user.post
[]
>>> post_1 = Post(title='Post 1', content='First post content.', user_id=user.id)
>>> post_1
User('Post 1', 'None')
>>> post_2 = Post(title='Post 2', content='Second post content.', user_id=user.id)
>>> db.session.add(post_1)
>>> db.session.add(post_2)
>>> db.session.commit()  
>>> user.post
[User('Post 1', '2019-06-27 20:22:38.768658'), User('Post 2', '2019-06-27 20:22:38.772658')]
>>> for post in user.post:
...     print(post.title)
...
Post 1
Post 2
>>> post = Post.query.first()
>>> post
User('Post 1', '2019-06-27 20:22:38.768658')
>>> post.user_id
1
>>> post.author
User('Corey', 'co@email.com', 'default.jpg')
>>> db.drop_all()  -> destroy database
>>> db.create_all()
>>> User.query.all()
[]
>>> Post.query.all()
[]
>>> exit()         

After reorganizing the structure of the project
$ python
>>> from shablog import db
>>> from shablog.models import User, Post
>>> db.create_all()
>>> User.query.all()
[]
>>> exit()

Now (after reorganizing the content) you can run the project with:
$ python run.py

Hash password:
$ pip install flask-bcrypt
$ python
>>> from flask_bcrypt import Bcrypt
>>> bcrypt = Bcrypt()
>>> bcrypt.generate_password_hash('testing')
b'$2b$12$X5XOpOrf9YngqrqRiKtO9O3FCo1h1IQen2ED0KXuugHUvR9YrJhmW'
>>> bcrypt.generate_password_hash('testing').decode('utf-8')
'$2b$12$p/3FQCYYs2SHmh6ywNZobONTjDIRGmbKIJKr5VhiQ9yWJbT.6DwxK'
>>> bcrypt.generate_password_hash('testing').decode('utf-8')
'$2b$12$j/pyzTy83ba2vMpQaWji2On4fzkNHgJsdnJesz3nlMfYAwTrowqQy'
>>> hash_pw = bcrypt.generate_password_hash('testing').decode('utf-8')
>>> bcrypt.check_password_hash(hash_pw, 'password')
False
>>> bcrypt.check_password_hash(hash_pw, 'testing')
True
>>> exit()

After connecting project with database, check if it still works as intended:
$ python
>>> from shablog import db
>>> from shablog.models import User
>>> user = User.query.first()
>>> user
User('sha', 'sha@email.com', 'default.jpg')
>>> user.password
'$2b$12$55NwJ0EOQFIk4pcCMc9BG.M6A77bY.MnshFR7b91bE5zxlRnaI5E.'
>>> exit()

For Log In (flask-login provides user session management):
$ pip install flask-login

